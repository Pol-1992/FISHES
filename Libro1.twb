<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0520.1026                               -->
<workbook original-version='18.1' source-build='2025.1.2 (20251.25.0520.1026)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Shark' datatype='string' name='[Parámetro 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
    </datasource>
    <datasource caption='marine_biodiversity_final' inline='true' name='federated.0jdckkq16nurjk15i4hrg12d1dg5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='marine_biodiversity_final' name='textscan.150mfnh016noxf1abz06b0pfarix'>
            <connection class='textscan' directory='C:/Users/polur/Desktop/IRONHACK/PROYECTOS/PROYECTO FINAL/FISHES' filename='marine_biodiversity_final.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.150mfnh016noxf1abz06b0pfarix' name='marine_biodiversity_final.csv' table='[marine_biodiversity_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='es_ES'>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='scientific_name' ordinal='1' />
            <column datatype='string' name='common_name' ordinal='2' />
            <column datatype='string' name='latitude' ordinal='3' />
            <column datatype='string' name='longitude' ordinal='4' />
            <column datatype='string' name='country' ordinal='5' />
            <column datatype='integer' name='fish_id' ordinal='6' />
            <column datatype='string' name='image' ordinal='7' />
            <column datatype='integer' name='Year' ordinal='8' />
            <column datatype='integer' name='Month' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[marine_biodiversity_final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;es&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;es_ES&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[marine_biodiversity_final.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scientific_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[scientific_name]</local-name>
            <parent-name>[marine_biodiversity_final.csv]</parent-name>
            <remote-alias>scientific_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>common_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[common_name]</local-name>
            <parent-name>[marine_biodiversity_final.csv]</parent-name>
            <remote-alias>common_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[marine_biodiversity_final.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[marine_biodiversity_final.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[marine_biodiversity_final.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fish_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fish_id]</local-name>
            <parent-name>[marine_biodiversity_final.csv]</parent-name>
            <remote-alias>fish_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>image</remote-name>
            <remote-type>129</remote-type>
            <local-name>[image]</local-name>
            <parent-name>[marine_biodiversity_final.csv]</parent-name>
            <remote-alias>image</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LES_RES' />
            <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[marine_biodiversity_final.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[marine_biodiversity_final.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Avg' caption='Lat (clean)' datatype='real' name='[Calculation_1235393694587342848]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <calculation class='tableau' formula='FLOAT(TRIM(REPLACE([latitude], &quot;,&quot;, &quot;.&quot;)))' />
      </column>
      <column aggregation='Avg' caption='Long (clean)' datatype='real' name='[Calculation_1235393694587441153]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <calculation class='tableau' formula='FLOAT(TRIM(REPLACE([longitude], &quot;,&quot;, &quot;.&quot;)))' />
      </column>
      <column caption='Species Filter' datatype='boolean' name='[Calculation_1235393694592651268]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS(LOWER([common_name]), LOWER([Parameters].[Parámetro 1]))' />
      </column>
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='marine_biodiversity_final.csv' datatype='table' name='[__tableau_internal_object_id__].[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]' role='measure' type='quantitative' />
      <column caption='Common Name' datatype='string' name='[common_name]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Fish Id' datatype='integer' hidden='true' name='[fish_id]' role='dimension' type='ordinal' />
      <column caption='Image' datatype='string' name='[image]' role='dimension' type='nominal' />
      <column caption='Latitude' datatype='string' name='[latitude]' role='dimension' type='nominal' />
      <column caption='Longitude' datatype='string' name='[longitude]' role='dimension' type='nominal' />
      <column caption='Scientific Name' datatype='string' hidden='true' name='[scientific_name]' role='dimension' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='es_ES' class='hyper' dbname='C:/Users/polur/AppData/Local/Temp/TableauTemp/#TableauTemp_1psqirf1s7b1ci17lvuys02aav8u.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/17/2025 10:06:39 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>marine_biodiversity_final.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>10890</approx-count>
              <contains-null>true</contains-null>
              <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>common_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[common_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>common_name</remote-alias>
              <ordinal>1</ordinal>
              <family>marine_biodiversity_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7615</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LES_RES' />
              <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>2</ordinal>
              <family>marine_biodiversity_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>46437</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LES_RES' />
              <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>3</ordinal>
              <family>marine_biodiversity_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>47337</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LES_RES' />
              <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>4</ordinal>
              <family>marine_biodiversity_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LES_RES' />
              <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>image</remote-name>
              <remote-type>129</remote-type>
              <local-name>[image]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>image</remote-alias>
              <ordinal>5</ordinal>
              <family>marine_biodiversity_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7655</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LES_RES' />
              <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>6</ordinal>
              <family>marine_biodiversity_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Month</remote-alias>
              <ordinal>7</ordinal>
              <family>marine_biodiversity_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <object-id>[marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;España&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Shark' datatype='string' name='[Parámetro 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
          <calculation class='tableau' formula='&quot;&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='marine_biodiversity_final.csv' id='marine_biodiversity_final.csv_02D7A64A57FD4509BC64833058E1CEC4'>
            <properties context=''>
              <relation connection='textscan.150mfnh016noxf1abz06b0pfarix' name='marine_biodiversity_final.csv' table='[marine_biodiversity_final#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='es_ES'>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='scientific_name' ordinal='1' />
                  <column datatype='string' name='common_name' ordinal='2' />
                  <column datatype='string' name='latitude' ordinal='3' />
                  <column datatype='string' name='longitude' ordinal='4' />
                  <column datatype='string' name='country' ordinal='5' />
                  <column datatype='integer' name='fish_id' ordinal='6' />
                  <column datatype='string' name='image' ordinal='7' />
                  <column datatype='integer' name='Year' ordinal='8' />
                  <column datatype='integer' name='Month' ordinal='9' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Hoja 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='marine_biodiversity_final' name='federated.0jdckkq16nurjk15i4hrg12d1dg5' />
            <datasource caption='Parámetros' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Shark' datatype='string' name='[Parámetro 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0jdckkq16nurjk15i4hrg12d1dg5'>
            <column aggregation='Avg' caption='Lat (clean)' datatype='real' name='[Calculation_1235393694587342848]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <calculation class='tableau' formula='FLOAT(TRIM(REPLACE([latitude], &quot;,&quot;, &quot;.&quot;)))' />
            </column>
            <column aggregation='Avg' caption='Long (clean)' datatype='real' name='[Calculation_1235393694587441153]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <calculation class='tableau' formula='FLOAT(TRIM(REPLACE([longitude], &quot;,&quot;, &quot;.&quot;)))' />
            </column>
            <column caption='Species Filter' datatype='boolean' name='[Calculation_1235393694592651268]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CONTAINS(LOWER([common_name]), LOWER([Parameters].[Parámetro 1]))' />
            </column>
            <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Common Name' datatype='string' name='[common_name]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Latitude' datatype='string' name='[latitude]' role='dimension' type='nominal' />
            <column caption='Longitude' datatype='string' name='[longitude]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1235393694587342848]' derivation='None' name='[none:Calculation_1235393694587342848:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1235393694587441153]' derivation='None' name='[none:Calculation_1235393694587441153:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1235393694592651268]' derivation='None' name='[none:Calculation_1235393694592651268:nk]' pivot='key' type='nominal' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:Calculation_1235393694592651268:nk]'>
            <groupfilter function='member' level='[none:Calculation_1235393694592651268:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:Month:qk]' included-values='in-range' />
          <filter class='quantitative' column='[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:Year:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Thailand&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:country:nk]</column>
            <column>[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:Month:qk]</column>
            <column>[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:Year:qk]</column>
            <column>[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:Calculation_1235393694592651268:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:Calculation_1235393694587441153:qk]' field-type='quantitative' max='15599239.151955433' min='8026688.6913520023' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:Calculation_1235393694587342848:qk]' field-type='quantitative' max='2598729.6137159741' min='-1521536.9664754868' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:country:nk]' />
              <lod column='[Parameters].[Parámetro 1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:Calculation_1235393694587342848:qk]</rows>
        <cols>[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:Calculation_1235393694587441153:qk]</cols>
      </table>
      <simple-id uuid='{186737A8-C08D-4A24-BDD4-865C8233B7A1}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Hoja 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='172'>
            <card param='[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:Month:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:Calculation_1235393694590472194:nk]</field>
            <field>[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:Calculation_1235393694592651268:nk]</field>
            <field>[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:common_name:nk]</field>
            <field>[federated.0jdckkq16nurjk15i4hrg12d1dg5].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{16BB4FAD-0C76-4753-AFBB-614595EFB1CC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Hoja 1' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
